[{"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\components\\confetti-explosion\\styles.ts":"1","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\components\\confetti-explosion\\utils.ts":"2","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\global.d.ts":"3","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\react-app-env.d.ts":"4","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\reportWebVitals.ts":"5","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\service-worker.ts":"6","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\serviceWorkerRegistration.ts":"7","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\events\\pawUpdateConfirmEvent.ts":"8","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\events\\pwaUpdateAvailableEvent.ts":"9","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\pwa.util.ts":"10","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\window.util.ts":"11"},{"size":4984,"mtime":1655305510282,"results":"12","hashOfConfig":"13"},{"size":917,"mtime":1655305523557,"results":"14","hashOfConfig":"13"},{"size":125,"mtime":1655302727769,"results":"15","hashOfConfig":"16"},{"size":40,"mtime":1655300713270,"results":"17","hashOfConfig":"13"},{"size":513,"mtime":1655304929765,"results":"18","hashOfConfig":"13"},{"size":2321,"mtime":1655305083826,"results":"19","hashOfConfig":"16"},{"size":5215,"mtime":1652460758576,"results":"20","hashOfConfig":"16"},{"size":133,"mtime":1652460758580,"results":"21","hashOfConfig":"13"},{"size":137,"mtime":1652460758580,"results":"22","hashOfConfig":"13"},{"size":872,"mtime":1652460758580,"results":"23","hashOfConfig":"13"},{"size":808,"mtime":1655301190156,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yokbrr",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ou53ke",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":12,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\components\\confetti-explosion\\styles.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\components\\confetti-explosion\\utils.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\global.d.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\react-app-env.d.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\reportWebVitals.ts",[],["59","60"],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\service-worker.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\serviceWorkerRegistration.ts",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80"],[],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\events\\pawUpdateConfirmEvent.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\events\\pwaUpdateAvailableEvent.ts",[],[],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\pwa.util.ts",[],["81"],"S:\\Repositories\\KaneFreeman\\wordle-kids\\src\\utility\\window.util.ts",[],[],{"ruleId":"82","severity":2,"message":"83","line":7,"column":5,"nodeType":"84","messageId":"85","endLine":13,"endColumn":8,"suppressions":"86"},{"ruleId":"87","severity":2,"message":"88","line":7,"column":31,"nodeType":"89","endLine":13,"endColumn":6,"suppressions":"90"},{"ruleId":"91","severity":2,"message":"92","line":42,"column":9,"nodeType":"93","messageId":"94","endLine":42,"endColumn":32},{"ruleId":"82","severity":2,"message":"83","line":46,"column":9,"nodeType":"84","messageId":"85","endLine":51,"endColumn":12},{"ruleId":"87","severity":2,"message":"88","line":46,"column":44,"nodeType":"89","endLine":51,"endColumn":10},{"ruleId":"95","severity":1,"message":"96","line":47,"column":11,"nodeType":"97","messageId":"98","endLine":47,"endColumn":22},{"ruleId":"91","severity":2,"message":"99","line":54,"column":9,"nodeType":"93","messageId":"94","endLine":54,"endColumn":24},{"ruleId":"87","severity":2,"message":"88","line":63,"column":11,"nodeType":"89","endLine":98,"endColumn":6},{"ruleId":"100","severity":2,"message":"101","line":64,"column":7,"nodeType":"93","messageId":"102","endLine":64,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":75,"column":15,"nodeType":"97","messageId":"98","endLine":75,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":88,"column":15,"nodeType":"97","messageId":"98","endLine":88,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":100,"column":7,"nodeType":"97","messageId":"98","endLine":100,"endColumn":20},{"ruleId":"87","severity":2,"message":"88","line":112,"column":7,"nodeType":"103","endLine":125,"endColumn":8},{"ruleId":"82","severity":2,"message":"83","line":117,"column":9,"nodeType":"84","messageId":"85","endLine":121,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":117,"column":9,"nodeType":"106","endLine":121,"endColumn":11},{"ruleId":"87","severity":2,"message":"88","line":117,"column":44,"nodeType":"89","endLine":121,"endColumn":10},{"ruleId":"82","severity":2,"message":"83","line":118,"column":11,"nodeType":"84","messageId":"85","endLine":120,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":118,"column":11,"nodeType":"106","endLine":120,"endColumn":13},{"ruleId":"87","severity":2,"message":"88","line":118,"column":42,"nodeType":"89","endLine":120,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":128,"column":7,"nodeType":"97","messageId":"98","endLine":128,"endColumn":18},{"ruleId":"87","severity":2,"message":"88","line":135,"column":13,"nodeType":"89","endLine":137,"endColumn":8},{"ruleId":"95","severity":1,"message":"96","line":139,"column":9,"nodeType":"97","messageId":"98","endLine":139,"endColumn":22},{"ruleId":"107","severity":2,"message":"108","line":22,"column":1,"nodeType":"109","endLine":35,"endColumn":3,"suppressions":"110"},"promise/catch-or-return","Expected catch() or return","ExpressionStatement","terminationMethod",["111"],"promise/always-return","Each then() should return a value or throw","ArrowFunctionExpression",["112"],"@typescript-eslint/no-use-before-define","'checkValidServiceWorker' was used before it was defined.","Identifier","noUseBeforeDefine","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","IfStatement","promise/no-nesting","Avoid nesting promises.","CallExpression","import/prefer-default-export","Prefer default export.","ExportNamedDeclaration",["113"],{"kind":"114","justification":"115"},{"kind":"114","justification":"115"},{"kind":"114","justification":"115"},"directive",""]